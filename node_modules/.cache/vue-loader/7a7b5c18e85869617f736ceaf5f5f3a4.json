{"remainingRequest":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Wamp_html\\examples\\vue\\16-wymusic\\src\\views\\profile\\Profile.vue?vue&type=style&index=0&id=44d9130e&scoped=true&lang=css&","dependencies":[{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\src\\views\\profile\\Profile.vue","mtime":1616833186543},{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Wamp_html\\examples\\vue\\16-wymusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI3Byb2ZpbGUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY0Ow0KICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA1MHB4KTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCi5jb250YWluZXIgew0KICB3aWR0aDogOTAlOw0KICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDQ5cHgpOw0KICBtYXJnaW46IDAgYXV0bzsNCn0NCi5uYXYtYmFyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsNCiAgei1pbmRleDogOTsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLm5hdi1iYXIgaW1nIHsNCiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsNCiAgd2lkdGg6IDI1cHg7DQp9DQoucHJpZmlsZS1zY3JvbGwgew0KICBoZWlnaHQ6IDk3JTsNCn0NCg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\r\n  <div id=\"profile\">\r\n    <nav-bar class=\"nav-bar\">\r\n      <div slot=\"left\" @click=\"leftPopClick\" class=\"left-pop\">\r\n        <img src=\"~assets/img/navbar/category.svg\" alt=\"\" />\r\n      </div>\r\n      <div slot=\"center\" v-if=\"showMsg\">\r\n        <img class=\"user-head\" v-lazy=\"userHeadUrl\" />\r\n        <span>{{ userNickName }}</span>\r\n      </div>\r\n    </nav-bar>\r\n    <!-- 个人信息等左弹出层 -->\r\n    <van-popup\r\n      class=\"left-van-popup\"\r\n      position=\"left\"\r\n      :style=\"{ height: '100vh', width: '70%' }\"\r\n      v-model=\"leftPopUp\"\r\n    >\r\n      <left-pop @logoutBtnClick=\"changePopStatus\" />\r\n    </van-popup>\r\n    <div class=\"container\">\r\n      <scroll\r\n        class=\"prifile-scroll\"\r\n        ref=\"profileScroll\"\r\n        :isListen=\"2\"\r\n        @scroll=\"contentScroll\"\r\n      >\r\n        <!-- 用户信息展示 -->\r\n        <user-msg />\r\n        <!-- 本地、播放等任务 -->\r\n        <tasks />\r\n        <!-- 我喜欢的音乐 -->\r\n        <my-favorite-song :my-favorite-song=\"myFavoriteSong\" />\r\n        <!-- 创建歌单/收藏歌单按钮 -->\r\n        <music-ctrl :titles=\"['创建歌单', '', '收藏歌单']\" />\r\n        <!-- 创建歌单 -->\r\n        <create-song-list :create-song-list=\"createSongList\" />\r\n        <!-- 收藏歌单 -->\r\n        <collect-song-list :collect-song-list=\"collectSongList\"/>\r\n\r\n      </scroll>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from 'components/common/navbar/NavBar';\r\nimport Scroll from 'components/common/scroll/Scroll';\r\n\r\nimport { getUserProfileMessge } from \"network/profile\";\r\n\r\nimport LeftPop from '../leftpop/LeftPop';\r\n\r\nimport UserMsg from './childComps/UserMsg';\r\nimport Tasks from './childComps/Tasks.vue';\r\nimport MyFavoriteSong from './childComps/MyFavoriteSong';\r\nimport MusicCtrl from './childComps/musicCtrl.vue';\r\nimport CreateSongList from './childComps/CreateSongList';\r\nimport CollectSongList from './childComps/CollectSongList.vue';\r\n\r\nexport default {\r\n  components: {\r\n    NavBar,\r\n    LeftPop,\r\n    UserMsg,\r\n    Tasks,\r\n    Scroll,\r\n    MyFavoriteSong,\r\n    MusicCtrl,\r\n    CreateSongList,\r\n    CollectSongList,\r\n  },\r\n  name: 'Profile',\r\n  data() {\r\n    return {\r\n      leftPopUp: false,   //个人信息左弹出层显示\r\n      showMsg: false,     //个人信息navbar弹出\r\n      myFavoriteSong: {}, //我喜欢的音乐\r\n      createSongList: [], //创建的歌单\r\n      collectSongList: [],//收藏的歌单\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * 事件监听相关方法\r\n     */\r\n    //点击左上角更多左弹出层显示事件\r\n    leftPopClick() {\r\n      // console.log('leftclick');\r\n      this.leftPopUp = true;\r\n    },\r\n    //监听到退出点击事件，隐藏弹出层\r\n    changePopStatus() {\r\n      this.leftPopUp = false;\r\n      //清空数据\r\n      this.myFavoriteSong = {};\r\n      this.createSongList = [];\r\n      this.collectSongList = [];\r\n    },\r\n    //监听滚动\r\n    contentScroll(position) {\r\n      // console.log(position);\r\n      if (Math.abs(position.y) > 80) {\r\n        this.showMsg = true;\r\n      } else {\r\n        this.showMsg = false;\r\n      }\r\n    },\r\n    /**\r\n     * 网络请求相关方法\r\n     */\r\n    //获取用户歌单\r\n    getUserProfileMessge(uid) {\r\n      getUserProfileMessge(uid)\r\n        .then(res => {\r\n          console.log(\"user profile in profile\", res);\r\n          //喜欢的音乐\r\n          this.myFavoriteSong = res.playlist[0];\r\n          //创建的歌单\r\n          this.createSongList = res.playlist.filter((item, index) => {\r\n            if (index != 0 && item.userId == this.$store.state.uid) return item;\r\n          });\r\n          //收藏的歌单\r\n          this.collectSongList = res.playlist.filter((item, index) => {\r\n            if (index != 0 && item.userId != this.$store.state.uid) return item;\r\n          });\r\n        })\r\n        .catch(err => {\r\n          const statusCode = err.response.status;\r\n          if (statusCode == 301) console.log('请先登录');\r\n        })\r\n    },\r\n  },\r\n  computed: {\r\n    // 登录后获取用户头像\r\n    userHeadUrl() {\r\n      let url = this.$store.state.userProfile != null ? this.$store.state.userProfile.avatarUrl : require('assets/img/leftpopup/user.svg');\r\n      return url;\r\n    },\r\n    // 登录后获取用户昵称\r\n    userNickName() {\r\n      let nickName = this.$store.state.userProfile != null ? this.$store.state.userProfile.nickname : '立即登录';\r\n      return nickName;\r\n    },\r\n  },\r\n  created() {\r\n    const uid = this.$store.state.uid;\r\n    //获取用户歌单\r\n    if (uid != null)\r\n      this.getUserProfileMessge(uid);\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#profile {\r\n  background-color: #f6f6f4;\r\n  height: calc(100vh - 50px);\r\n  overflow: hidden;\r\n}\r\n.container {\r\n  width: 90%;\r\n  height: calc(100% - 49px);\r\n  margin: 0 auto;\r\n}\r\n.nav-bar {\r\n  background-color: #ffffff;\r\n  z-index: 9;\r\n  position: relative;\r\n}\r\n.nav-bar img {\r\n  vertical-align: middle;\r\n  width: 25px;\r\n}\r\n.prifile-scroll {\r\n  height: 97%;\r\n}\r\n</style>"]}]}